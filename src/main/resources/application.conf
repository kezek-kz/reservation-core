akka {

  actor {
    system = "order-core"
  }

  loglevel = INFO

  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  logger-startup-timeout = 30s

  http {
    server {
      idle-timeout = 180s
      request-timeout = 120s
      bind-timeout = 5s
    }

    client {
      connecting-timeout = 60s
      idle-timeout = 120s
    }

    host-connection-pool {
      max-connections = 4
      max-open-requests = 32
      response-entity-subscription-timeout = 30 s
    }
  }

  dispatchers {
    main {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 16
      }
      throughput = 1
    }
  }
}

akka-http-cors {
  allow-generic-http-requests = yes
  allow-credentials = yes
  allowed-origins = "*"
  allowed-headers = "*"
  allowed-methods = ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  exposed-headers = []
  max-age = 1800 seconds
}

db {
  mongo {
    connection-string = ${MONGO_CONNECTION_STRING}
    database = "dev_kezek"
    database = ${?MONGO_DATABASE}
    collection {
      counter = "counter"
      table = "table"
      table = ${?MONGO_TABLE_COLLECTION}
      reservation = "reservation"
      reservation = ${?MONGO_RESERVATION_COLLECTION}
      restaurant-map = "restaurant-map"
      restaurant-map = ${?MONGO_RESTAURANT_MAP_COLLECTION}
      concurrent-booker = "concurrent-booker"
      concurrent-booker = ${?MONGO_CONCURRENT_BOOKER_COLLECTION}
    }
  }
}

application {
  qr-prefix-url = "some url"
}

aws {
  s3 {
    bucket {
      aml = "kezek"
      aml = ${?AWS_S3_BUCKET}
    }
  }
  region = "eu-west-2"
  region = ${?AWS_REGION}
  accessKeyId = ${?AWS_ACCESS_KEY_ID}
  secretAccessKey = ${?AWS_SECRET_ACCESS_KEY}
}

http-server {
  interface = "0.0.0.0"
  interface = ${?HOST}
  port = 8080
  port = ${?PORT}
  ask-timeout = 60s
}

swagger {
  host = "localhost:8080"
  host = ${?SWAGGER_HOST}
  schemes = http
  schemes = ${?SWAGGER_SCHEMES}
}

env = "dev"
env =  ${?ENV}